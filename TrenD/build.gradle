plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.td'
version = '0.0.1-SNAPSHOT'

java {
//    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //JSP
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    //JSTL
    implementation 'javax.servlet:jstl'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //OAuth2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //JWT
    implementation 'com.auth0:java-jwt:4.2.1'

    //Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //tomcat
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //view 파일 변경사항 서버 재구동 없이 반영
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    //smtp
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'


    //jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'

    //Test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    //json 라이브러리
	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20231013'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}